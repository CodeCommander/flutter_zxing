name: Flutter CI

# Trigger CI on (1) pull requests and (2) pushes to main.
on:
  pull_request:
  push:
    branches:
      - main

# Workflows run on a PR should cancel previous workflows run on the same PR, but
# NOT workflows running elsewhere (master).
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: read-all

jobs:
  # Lint and format all the *.dart code.
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - uses: bluefireteam/melos-action@v3
        with:
          run-bootstrap: true
          enforce-lockfile: true

      - run: dart format --set-exit-if-changed .
      - run: dart analyze

  # Build the example application across all supported platforms.
  build-example:
    name: 'build-example (${{ matrix.target }}, ${{ matrix.os}})'
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: android
            os: ubuntu
          - target: ios
            os: macos
          - target: macos
            os: macos
          - target: linux
            os: ubuntu
          - target: windows
            os: windows

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # (Android-only) Setup java
      - uses: actions/setup-java@v4.2.1
        if: matrix.target == 'android'
        with:
          java-version: 11
          distribution: temurin

      # (Linux-only) Install required Flutter dependencies
      - name: 'Setup Linux'
        run: |
          sudo apt update
          sudo apt install -y cmake dbus libblkid-dev libgtk-3-dev liblzma-dev ninja-build pkg-config xvfb
          sudo apt install -y network-manager upower
        if: matrix.target == 'linux'

      # Setup flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      # Setup melos
      - uses: bluefireteam/melos-action@v3
        with:
          run-bootstrap: true
          enforce-lockfile: true

      - name: 'Build example ${{ matrix.target }}'
        run: |
          flutter config --enable-windows-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-linux-desktop

          cd example
          TARGET=${{ matrix.target }}

          case $TARGET in
            ios)
              flutter build ios --no-codesign
              ;;
            macos)
              flutter build macos
              ;;
            android)
              flutter build appbundle
              ;;
            linux)
              flutter build linux
              ;;
            windows)
              flutter build windows
              ;;
          esac
